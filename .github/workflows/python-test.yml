name: Python Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'requirements.txt'
      - 'Makefile'
      - '.github/workflows/python-test.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'requirements.txt'
      - 'Makefile'
      - '.github/workflows/python-test.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install ruff black

    - name: Lint with ruff
      run: |
        # Check for syntax errors and other issues
        ruff check src --output-format=github
        
    - name: Check formatting with black
      run: |
        # Check if code is formatted according to black standards
        black --check --diff src

    - name: Run basic import tests
      run: |
        # Test basic imports work
        python -c "from src.shared.database import Base, get_db; from src.fetcher.steam_library_fetcher import SteamLibraryFetcher; from src.mcp_server.server import mcp; print('âœ… All basic imports successful!')"

    - name: Run MCP compliance tests
      run: |
        # Run unit tests for MCP specification compliance
        python tests/test_enhanced_tools.py
        python tests/test_enhanced_prompts.py
        python tests/test_enhanced_resources.py

    - name: Run functional tests
      run: |
        # Run functional tests for tool behavior
        python tests/test_tools_simple.py

    - name: Run MCP protocol tests
      run: |
        # Run MCP protocol compliance tests
        python tests/test_mcp_protocol.py