name: Manual Docker Build

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker image tag'
        required: true
        default: 'manual'
      push:
        description: 'Push images to registry'
        required: true
        type: boolean
        default: true
      platforms:
        description: 'Target platforms (comma-separated)'
        required: true
        default: 'linux/amd64,linux/arm64'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_FETCHER: ${{ github.repository }}/fetcher
  IMAGE_NAME_MCP: ${{ github.repository }}/mcp-server
  IMAGE_NAME_TOOLS: ${{ github.repository }}/tools-server

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      if: inputs.push
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push fetcher image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./deploy/docker/Dockerfile.fetcher
        push: ${{ inputs.push }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FETCHER }}:${{ inputs.tag }}
        platforms: ${{ inputs.platforms }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push MCP server image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./deploy/docker/Dockerfile.mcp_server
        push: ${{ inputs.push }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_MCP }}:${{ inputs.tag }}
        platforms: ${{ inputs.platforms }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push Tools server image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./deploy/docker/Dockerfile.oops_all_tools
        push: ${{ inputs.push }}
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_TOOLS }}:${{ inputs.tag }}
        platforms: ${{ inputs.platforms }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Summary
      run: |
        echo "## Manual Build Complete" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Tag:** ${{ inputs.tag }}" >> $GITHUB_STEP_SUMMARY
        echo "**Pushed:** ${{ inputs.push }}" >> $GITHUB_STEP_SUMMARY
        echo "**Platforms:** ${{ inputs.platforms }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [[ "${{ inputs.push }}" == "true" ]]; then
          echo "### Images" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FETCHER }}:${{ inputs.tag }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME_MCP }}:${{ inputs.tag }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME_TOOLS }}:${{ inputs.tag }}\`" >> $GITHUB_STEP_SUMMARY
        fi