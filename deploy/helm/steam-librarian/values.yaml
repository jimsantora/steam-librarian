# Default values for steam-librarian.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Global settings
global:
  # Storage class for persistent volume
  storageClass: "longhorn"
  # Storage size for the database
  storageSize: "500Mi"

# Steam API Configuration (will be stored as Secret)
steam:
  # Steam ID - REQUIRED
  steamId: ""
  # Steam API Key - REQUIRED
  apiKey: ""
  # Use existing secret (if set, steamId and apiKey above are ignored)
  existingSecret: ""
  # Keys in the existing secret
  existingSecretKeys:
    steamId: "steam-id"
    apiKey: "steam-api-key"

# Fetcher CronJob Configuration
fetcher:
  enabled: true
  image:
    repository: ghcr.io/jimsantora/steam-librarian/fetcher
    tag: 1.6.0
    pullPolicy: IfNotPresent
  
  # CronJob schedule (daily at 2 AM)
  schedule: "0 2 * * *"
  
  # Job settings
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  
  # Cache settings
  cacheDays: 7
  
  # Additional arguments for the fetcher
  extraArgs:
    - "--friends"
  # - "--force-refresh"
  
  # Resources
  resources: {}
    # limits:
    #   cpu: 500m
    #   memory: 512Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  
  # Node selector
  nodeSelector: {}
  
  # Tolerations
  tolerations: []
  
  # Affinity
  affinity: {}

# MCP Server Deployment Configuration  
mcpServer:
  enabled: true
  image:
    repository: ghcr.io/jimsantora/steam-librarian/mcp-server
    tag: 1.6.0
    pullPolicy: IfNotPresent
  
  # Number of replicas
  replicaCount: 1
  
  # Service configuration
  service:
    type: ClusterIP
    port: 8000
    targetPort: 8000
    annotations: {}
  
  # Resources
  resources: {}
    # limits:
    #   cpu: 500m
    #   memory: 512Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  
  # Probes
  livenessProbe:
    enabled: true
    httpGet:
      path: /health
      port: http
    initialDelaySeconds: 30
    periodSeconds: 30
  
  readinessProbe:
    enabled: true
    httpGet:
      path: /health
      port: http
    initialDelaySeconds: 5
    periodSeconds: 5

# Tools-Only MCP Server Configuration
toolsServer:
  enabled: true
  image:
    repository: ghcr.io/jimsantora/steam-librarian/tools-server
    tag: 1.6.0
    pullPolicy: IfNotPresent
  
  # Service configuration
  service:
    type: ClusterIP
    port: 8001
    targetPort: 8001
    annotations: {}
  
  # Resources
  resources: {}
    # limits:
    #   cpu: 300m
    #   memory: 256Mi
    # requests:
    #   cpu: 50m
    #   memory: 64Mi
  
  # Environment variables
  env:
    mcpHost: "0.0.0.0"
    mcpPort: 8001
    debug: false
    defaultUser: "default"
  
  # Probes
  livenessProbe:
    enabled: true
    httpGet:
      path: /health
      port: http
    initialDelaySeconds: 30
    periodSeconds: 30
  
  readinessProbe:
    enabled: true
    httpGet:
      path: /health
      port: http
    initialDelaySeconds: 5
    periodSeconds: 5
  
  # Node selector
  nodeSelector: {}
  
  # Tolerations
  tolerations: []
  
  # Affinity
  affinity: {}
  
  # Pod annotations
  podAnnotations: {}
  
  # Pod security context
  podSecurityContext:
    fsGroup: 65534  # nogroup
  
  # Container security context
  securityContext:
    runAsNonRoot: true
    runAsUser: 65534  # nobody user
    runAsGroup: 65534  # nogroup
    readOnlyRootFilesystem: false

  # MCP Server Configuration
  debug: false
  defaultUser: "default"

# Persistent Volume Configuration
persistence:
  enabled: true
  # Use existing PVC
  existingClaim: ""
  # Access mode
  accessMode: ReadWriteMany
  # Annotations
  annotations: {}
  
# Image pull secrets
imagePullSecrets: []

# Service Account
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use
  name: ""

# Common labels to add to all resources
commonLabels: {}

# Common annotations to add to all resources
commonAnnotations: {}
