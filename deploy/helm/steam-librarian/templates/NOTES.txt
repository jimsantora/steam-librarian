1. Get the application URL by running these commands:
{{- if contains "ClusterIP" .Values.mcpServer.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "steam-librarian.name" . }},app.kubernetes.io/instance={{ .Release.Name }},app.kubernetes.io/component=mcp-server" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- else if contains "NodePort" .Values.mcpServer.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "steam-librarian.fullname" . }}-mcp-server)
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.mcpServer.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "steam-librarian.fullname" . }}-mcp-server'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "steam-librarian.fullname" . }}-mcp-server --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.mcpServer.service.port }}
{{- end }}

2. Check the status of the fetcher job:
  kubectl get jobs --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "steam-librarian.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"

3. Check the fetcher cronjob schedule:
  kubectl get cronjobs --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "steam-librarian.name" . }},app.kubernetes.io/instance={{ .Release.Name }}"

4. View logs from the MCP server:
  kubectl logs --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "steam-librarian.name" . }},app.kubernetes.io/instance={{ .Release.Name }},app.kubernetes.io/component=mcp-server" -f

5. View logs from the fetcher:
  kubectl logs --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "steam-librarian.name" . }},app.kubernetes.io/instance={{ .Release.Name }},app.kubernetes.io/component=fetcher" -f

{{- if .Values.fetcher.runOnStartup }}

NOTE: The fetcher job is running on startup to populate the database. This may take a few minutes depending on your library size.
{{- end }}