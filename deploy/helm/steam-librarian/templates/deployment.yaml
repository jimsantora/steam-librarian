{{- if .Values.mcpServer.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "steam-librarian.fullname" . }}-mcp-server
  labels:
    {{- include "steam-librarian.labels" . | nindent 4 }}
    app.kubernetes.io/component: mcp-server
spec:
  replicas: {{ .Values.mcpServer.replicaCount }}
  selector:
    matchLabels:
      {{- include "steam-librarian.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: mcp-server
  template:
    metadata:
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.mcpServer.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "steam-librarian.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: mcp-server
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "steam-librarian.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.mcpServer.podSecurityContext | nindent 8 }}
      initContainers:
      - name: fix-permissions
        image: busybox:1.36
        command: ['sh', '-c']
        args:
          - |
            echo "Setting ownership of /data to nobody:nogroup (65534:65534)"
            chown -R 65534:65534 /data
            chmod -R 755 /data
            echo "Permissions fixed"
        volumeMounts:
        - name: data
          mountPath: /data
        securityContext:
          runAsUser: 0  # Run as root to change ownership
          runAsNonRoot: false
      containers:
      - name: mcp-server
        securityContext:
          {{- toYaml .Values.mcpServer.securityContext | nindent 12 }}
        image: "{{ .Values.mcpServer.image.repository }}:{{ .Values.mcpServer.image.tag }}"
        imagePullPolicy: {{ .Values.mcpServer.image.pullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.mcpServer.service.targetPort }}
          protocol: TCP
        {{- if .Values.mcpServer.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.mcpServer.livenessProbe.httpGet.path }}
            port: {{ .Values.mcpServer.livenessProbe.httpGet.port }}
          initialDelaySeconds: {{ .Values.mcpServer.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.mcpServer.livenessProbe.periodSeconds }}
        {{- end }}
        {{- if .Values.mcpServer.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: {{ .Values.mcpServer.readinessProbe.httpGet.path }}
            port: {{ .Values.mcpServer.readinessProbe.httpGet.port }}
          initialDelaySeconds: {{ .Values.mcpServer.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.mcpServer.readinessProbe.periodSeconds }}
        {{- end }}
        env:
        - name: DATABASE_URL
          value: "sqlite:////data/steam_library.db"
        - name: HOST
          value: "0.0.0.0"
        - name: PORT
          value: "{{ .Values.mcpServer.service.targetPort }}"
        - name: DEBUG
          value: "{{ .Values.mcpServer.debug | default false }}"
        - name: LOG_LEVEL
          value: "{{ .Values.mcpServer.logLevel | default "INFO" }}"
        - name: ENABLE_CACHE
          value: "{{ .Values.mcpServer.cache.enabled | default true }}"
        - name: CACHE_TTL
          value: "{{ .Values.mcpServer.cache.ttl | default 3600 }}"
        - name: CACHE_TTL_SEARCH
          value: "{{ .Values.mcpServer.cache.searchTtl | default 900 }}"
        - name: CACHE_TTL_RECOMMENDATIONS
          value: "{{ .Values.mcpServer.cache.recommendationsTtl | default 3600 }}"
        - name: CACHE_MAX_SIZE
          value: "{{ .Values.mcpServer.cache.maxSize | default 1000 }}"
        - name: ENABLE_NL_SEARCH
          value: "{{ .Values.mcpServer.features.naturalLanguageSearch | default true }}"
        - name: ENABLE_RECOMMENDATIONS
          value: "{{ .Values.mcpServer.features.recommendations | default true }}"
        - name: ENABLE_FRIENDS_DATA
          value: "{{ .Values.mcpServer.features.friendsData | default true }}"
        - name: MAX_SEARCH_RESULTS
          value: "{{ .Values.mcpServer.performance.maxSearchResults | default 50 }}"
        - name: MAX_RECOMMENDATIONS
          value: "{{ .Values.mcpServer.performance.maxRecommendations | default 10 }}"
        - name: REQUEST_TIMEOUT
          value: "{{ .Values.mcpServer.performance.requestTimeout | default 30 }}"
        - name: STEAM_ID
          valueFrom:
            secretKeyRef:
              name: {{ include "steam-librarian.secretName" . }}
              key: {{ .Values.steam.existingSecretKeys.steamId }}
        volumeMounts:
        - name: data
          mountPath: /data
        {{- with .Values.mcpServer.resources }}
        resources:
          {{- toYaml . | nindent 12 }}
        {{- end }}
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ include "steam-librarian.pvcName" . }}
      {{- with .Values.mcpServer.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mcpServer.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mcpServer.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}